;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;#include <sleep.h>
;
;// Declare your global variables here
;flash char key_refresh[4]={0xFE, 0xFD, 0xFB, 0xF7};
;//      flash int key_number [4][4]={'7', '8', '9', '-3',
;//                                   '4', '5', '6', '-4',
;//                                   '1', '2', '3', '-5',
;//                                 '-1', '0', '-2', '-6'};
;
;flash char key_number [4][4]={'7', '8', '9', '/',
;                              '4', '5', '6', '*',
;                              '1', '2', '3', '-',
;                              'C', '0', '=', '+'};
;eeprom int password1 = -1 ;
;eeprom int password2 = -1 ;
;eeprom int password3 = -1 ;
;eeprom int password4 = -1 ;
;int position = -1 ;
;eeprom int isPassword = -1 ;
;
;int pass1 = -1 ;
;int pass2 = -1 ;
;int pass3 = -1 ;
;int pass4 = -1 ;
;
;
;// External Interrupt 2 service routine
;interrupt [EXT_INT2] void ext_int2_isr(void){
; 0000 0020 interrupt [4] void ext_int2_isr(void){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0021 
; 0000 0022  char  row, column, temp;
; 0000 0023 
; 0000 0024        for (row=0; row<4; row++)
;PCODE: $0000000F VOL: 0
;	row -> R17
;	column -> R16
;	temp -> R19
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0025         {
; 0000 0026              PORTD =  key_refresh[row];
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0027 
; 0000 0028          temp = PIND;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0029          temp = temp & 0xF0;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 002A 
; 0000 002B          if (temp != 0xF0)
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 002C          {
; 0000 002D              if (PIND.4 == 0)
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 002E                 column=0;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 002F              if (PIND.5 == 0)
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0030                 column=1;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0031              if (PIND.6 == 0)
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0032                 column=2;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0033              if (PIND.7 == 0)
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0034                 column=3;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0035 
; 0000 0036              if (key_number[row][column] == 'C') {
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0037               lcd_clear();
;PCODE: $00000048 VOL: 0
; 0000 0038               isPassword = -1 ;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0039               password1 = -1 ;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 003A               password2 = -1 ;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 003B               password3 = -1 ;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 003C               password4 = -1 ;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 003D               lcd_putsf ("Please choose a new password");
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 003E               position = 1 ;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 003F               }
; 0000 0040 
; 0000 0041               else
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0042               {
; 0000 0043                     if (isPassword == -1 && position == 1) {
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0044                  lcd_clear();
;PCODE: $0000006A VOL: 0
; 0000 0045                  lcd_putchar(key_number[row][column]);
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0046                  password1 = key_number[row][column] ;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0047                  position = 2 ;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0048 
; 0000 0049                       }
; 0000 004A 
; 0000 004B                  else if (isPassword == -1 && position == 2) {
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 004C                  lcd_putchar(key_number[row][column]);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 004D                  password2 = key_number[row][column] ;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 004E                  position = 3 ;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 004F              }else if (isPassword == -1 && position == 3) {
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0050                  lcd_putchar(key_number[row][column]);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0051                  password3 = key_number[row][column] ;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 0052                  position = 4  ;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0053              }else if (isPassword == -1 && position == 4) {
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 0054                  password4 = key_number[row][column] ;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0055                  lcd_clear();
;PCODE: $000000E6 VOL: 0
; 0000 0056                  lcd_putsf ("Password Seted Successfully");
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0057                  isPassword = 1 ;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 0058                  position = 1 ;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 0059                  delay_ms(2000) ;
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 005A                  lcd_clear();
;PCODE: $000000F1 VOL: 0
; 0000 005B                  lcd_putsf ("Please insert your password");
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 005C 
; 0000 005D              }else if (isPassword == 1 && position == 1) {
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 005E                  lcd_clear();
;PCODE: $00000102 VOL: 0
; 0000 005F                  lcd_putchar(key_number[row][column]);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0060                  pass1 = key_number[row][column] ;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 0061                  position = 2 ;
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 0062              }else if (isPassword == 1 && position == 2) {
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 0063                  lcd_putchar(key_number[row][column]);
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 0064                  pass2 = key_number[row][column] ;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 0065                  position = 3 ;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 0066              }else if (isPassword == 1 && position == 3) {
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 0067                  lcd_putchar(key_number[row][column]);
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 0068                  pass3 = key_number[row][column] ;
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 0069                  position = 4 ;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 006A              }else if (isPassword == 1 && position == 4) {
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 006B                  lcd_putchar(key_number[row][column]);
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 006C                  pass4 = key_number[row][column] ;
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 006D                  position = 5 ;
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 006E              }
; 0000 006F 
; 0000 0070               if (key_number[row][column] == '='){
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 0071                 if (password1 == pass1) {
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 0072                    if (password2 == pass2){
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 0073                      if (password3 == pass3){
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 0074                        if(password4 == pass4){
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 0075                          lcd_clear();
;PCODE: $000001A5 VOL: 0
; 0000 0076                          lcd_putsf ("ok");
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 0077                          delay_ms(1500);
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 0078                          lcd_clear();
;PCODE: $000001AB VOL: 0
; 0000 0079                          lcd_putsf ("Please insert your password");
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 007A                          position = 1 ;
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 007B 
; 0000 007C                          if (PORTB.0 == 0){
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 007D                          PORTB.0 = 1;}
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 007E                          else if (PORTB.0 == 1){
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 007F                          PORTB.0 = 0;}
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 0080                          }else if(password4 != pass4){
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0000 0081                          lcd_clear();
;PCODE: $000001C5 VOL: 0
; 0000 0082                          lcd_putsf ("Password wrong !!!");
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 0083                          delay_ms(1500);
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 0084                          lcd_clear();
;PCODE: $000001CB VOL: 0
; 0000 0085                          lcd_putsf ("Please insert your password");
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 0086                          position = 1 ;}
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 0087                        }else if(password3 != pass3){
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 0088                          lcd_clear();
;PCODE: $000001D9 VOL: 0
; 0000 0089                          lcd_putsf ("Password wrong !!!");
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 008A                          delay_ms(1500);
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 008B                          lcd_clear();
;PCODE: $000001DF VOL: 0
; 0000 008C                          lcd_putsf ("Please insert your password");
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 008D                          position = 1 ;}
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 008E                      }else if(password2 != pass2){
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 008F                          lcd_clear();
;PCODE: $000001ED VOL: 0
; 0000 0090                          lcd_putsf ("Password wrong !!!");
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 0091                          delay_ms(1500);
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 0092                          lcd_clear();
;PCODE: $000001F3 VOL: 0
; 0000 0093                          lcd_putsf ("Please insert your password");
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 0094                          position = 1 ;}
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 0095                 }else if(password1 != pass1){
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 0096                          lcd_clear();
;PCODE: $00000201 VOL: 0
; 0000 0097                          lcd_putsf ("Password wrong !!!");
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 0098                          delay_ms(1500);
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0000 0099                          lcd_clear();
;PCODE: $00000207 VOL: 0
; 0000 009A                          lcd_putsf ("Please insert your password");
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0000 009B                          position = 1 ;}
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 009C 
; 0000 009D               }
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 009E 
; 0000 009F 
; 0000 00A0 //                 if (key_number[row][column] == '+'){
; 0000 00A1 //                 lcd_clear();
; 0000 00A2 //                 lcd_putchar(password1);
; 0000 00A3 //                 lcd_putchar(password2);
; 0000 00A4 //                 lcd_putchar(password3);
; 0000 00A5 //                 lcd_putchar(password4);
; 0000 00A6 //                 }
; 0000 00A7 
; 0000 00A8 
; 0000 00A9 
; 0000 00AA              }
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
; 0000 00AB 
; 0000 00AC 
; 0000 00AD           //       else if ( isPassword == -1 && position == -1 ) {
; 0000 00AE         //         lcd_putsf ("Please choose a new password");
; 0000 00AF       //           position = 1 ;
; 0000 00B0     //         } if (isPassword == -1 && position == 1) {
; 0000 00B1 //                 lcd_clear();
; 0000 00B2 //                 lcd_putchar(key_number[row][column]);
; 0000 00B3  //                password1 = key_number[row][column] ;
; 0000 00B4   //               position = 2 ;      }
; 0000 00B5 //             }else if (isPassword == -1 && position == 2) {
; 0000 00B6 //                 lcd_putchar(key_number[row][column]);
; 0000 00B7 //                 password2 = key_number[row][column] ;
; 0000 00B8 //                 position = 3 ;
; 0000 00B9 //             }else if (isPassword == -1 && position == 3) {
; 0000 00BA //                 lcd_putchar(key_number[row][column]);
; 0000 00BB //                 password3 = key_number[row][column] ;
; 0000 00BC //                 position = 4  ;
; 0000 00BD //             }else if (isPassword == -1 && position == 4) {
; 0000 00BE //                 password4 = key_number[row][column] ;
; 0000 00BF //                 lcd_clear();
; 0000 00C0 //                 lcd_putsf ("Password Seted Successfully");
; 0000 00C1 //                 isPassword = 1 ;
; 0000 00C2 //                 position = 1 ;
; 0000 00C3 //             }else if (isPassword == 1 && position == 1  ) {
; 0000 00C4 //                 lcd_clear();
; 0000 00C5 //                 lcd_putsf ("yessssss");
; 0000 00C6 //             }
; 0000 00C7 
; 0000 00C8          }
; 0000 00C9 
; 0000 00CA 
; 0000 00CB 
; 0000 00CC    }
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 00CD    PORTD = 0xF0;
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 00CE 
; 0000 00CF    }
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;
;
;
;
;void main(void){
; 0000 00D4 void main(void){
;PCODE: $0000021E VOL: 0
; 0000 00D5 // Declare your local variables here
; 0000 00D6 
; 0000 00D7 // Input/Output Ports initialization
; 0000 00D8 // Port A initialization
; 0000 00D9 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00DA DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 00DB // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00DC PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 00DD 
; 0000 00DE // Port B initialization
; 0000 00DF // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00E0 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0000 00E1 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00E2 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (1<<PORTB1) | (0<<PORTB0);
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 00E3 
; 0000 00E4 // Port D initialization
; 0000 00E5 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 00E6 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 00E7 // State: Bit7=P Bit6=P Bit5=P Bit4=P Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 00E8 PORTD=(1<<PORTD7) | (1<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 00E9 
; 0000 00EA 
; 0000 00EB // External Interrupt(s) initialization
; 0000 00EC // INT0: Off
; 0000 00ED // INT1: Off
; 0000 00EE // INT2: On
; 0000 00EF // INT2 Mode: Falling Edge
; 0000 00F0 GICR|=(0<<INT1) | (0<<INT0) | (1<<INT2);
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 00F1 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0000 00F2 MCUCSR=(0<<ISC2);
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 00F3 GIFR=(0<<INTF1) | (0<<INTF0) | (1<<INTF2);
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 00F4 
; 0000 00F5 // Alphanumeric LCD initialization
; 0000 00F6 // Connections are specified in the
; 0000 00F7 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 00F8 // RS - PORTA Bit 0
; 0000 00F9 // RD - PORTA Bit 1
; 0000 00FA // EN - PORTA Bit 2
; 0000 00FB // D4 - PORTA Bit 4
; 0000 00FC // D5 - PORTA Bit 5
; 0000 00FD // D6 - PORTA Bit 6
; 0000 00FE // D7 - PORTA Bit 7
; 0000 00FF // Characters/line: 16
; 0000 0100 lcd_init(16);
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 0101 
; 0000 0102 // Global enable interrupts
; 0000 0103 #asm("sei")
;PCODE: $00000236 VOL: 0
	sei
;PCODE: $00000237 VOL: 0
; 0000 0104 
; 0000 0105 while (1){
;PCODE: $00000238 VOL: 0
; 0000 0106 
; 0000 0107   idle();
;PCODE: $00000239 VOL: 0
; 0000 0108  //Ba dastoore idele() CPU be halate Sleep rafte va faghat
; 0000 0109  // ba interrupt az khab bidar migardad. Gozashtane in dastoor
; 0000 010A  // baes migardad dar tavane masrafi sarfejooyi shode va micro bihoode dagh nagardad.
; 0000 010B }
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 010C 
; 0000 010D 
; 0000 010E }
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
